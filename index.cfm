<h1>persistence.cfc</h1>

<p><strong>persistence.cfc</strong> is a lightweight CFML wrapper around CRUD operations on relational databases (currently MSSQL and MYSQL). It has been tested on Railo 
and ColdFusion. It should run on Railo 3.3+ and ColdFusion 9.0.1+. It is initialized with a datasource, and makes the following methods available: get(), getByProperties(), new(), getOrNew(), validate(), save(), updateByProperties(), delete(), and deleteByProperties(). It makes extensive use of the cfdbinfo tag to look up primary and foreign key information. On the CFML side it expects and returns structures and arrays of structures.</p>

<h2>Using with a bean factory</h2>
<p>persistence.cfc was designed to be used with <a href="https://github.com/framework-one/di1" target="_blank">DI/1</a> to enable more sophisticated behaviors. However, any bean factory that makes the following methods available should work with it: addBean(), containsBean(), and getBean(). If a bean factory is passed into persistence.cfc at initialization, it will add itself to the bean factory using the addBean method, giving itself by default the alias of 'persistence' (this alias can be configured). Then, when persistence.cfc CRUD methods are called, it will look for bean names in the factory that start with the specified tablename, and have a suffix of 'persistence' (this suffix can also be configured), and then will look for specific methods (such as beforeSave() and afterSave()) in those beans to call at the appropriate points in each CRUD operation.</p>

<p>There are some <a href="tests/index.cfm">unit tests</a> that can be run. They depend on <a href="http://mxunit.org" target="_blank">mxunit</a> and require a mapping of 'mxunit' pointing to the directory of the mxunit framework. A datasource for a database you can run tests on also needs to be provided; it can be set in tests/Application.cfc. Please note that if you are testing with a MySQL database, you will need to set the datasource to allow multiple queries at a time (this is only for testing, as the setup script contains multiple sql statements). In Railo this is a checkbox, in ColdFusion you need to add "allowMultiQueries=true" to the connection string box.</p>